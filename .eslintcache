[{"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/App.js":"1","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Calendar.js":"2","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/reportWebVitals.js":"3","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Modal.js":"4","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/index.js":"5","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/store/index.js":"6","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/static.js":"7","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Alert.js":"8"},{"size":756,"mtime":1606560338898,"results":"9","hashOfConfig":"10"},{"size":6541,"mtime":1606665813470,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1606353198693,"results":"12","hashOfConfig":"10"},{"size":6877,"mtime":1606678879210,"results":"13","hashOfConfig":"10"},{"size":500,"mtime":1606597248331,"results":"14","hashOfConfig":"10"},{"size":1896,"mtime":1606620207646,"results":"15","hashOfConfig":"10"},{"size":344,"mtime":1606619566460,"results":"16","hashOfConfig":"10"},{"size":1581,"mtime":1606665393477,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"id7xea",{"filePath":"21","messages":"22","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/App.js",["37"],"import logo from './logo.svg';\nimport Calendar from './Calendar';\nimport { Provider } from 'react-redux'\nimport store from './store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Calendar />\n      </Provider>\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Calendar.js",["38","39","40","41","42","43","44"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Alert from './Alert';\nimport moment from 'moment';\nimport Modal from './Modal';\nimport './styles.css';\n\n\nfunction Calendar() {\n  const events = useSelector(state => state.data);\n  const selectedDate = useSelector(state => state.selectedDate);\n  const [addNewEventVisible, setAddNewEventVisible] = useState(false)\n  const [monthOffset, setMonthOffset] = useState(0)\n  const [currentMonth, setCurrentMonth] = useState(moment().add(0, 'months'))\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const dispatch = useDispatch();\n  \n  // const [lastMonth, setLastMonth] = useState(Array.from({length: moment().add(monthOffset - 1,'months').daysInMonth()}, (x, i) => moment().add(monthOffset - 1,'months').startOf('month').add(i, 'days')))\n  const [nextMonth, setNextMonth] = useState(Array.from({length: moment().add(monthOffset + 1,'months').daysInMonth()}, (x, i) => moment().add(monthOffset + 1,'months').startOf('month').add(i, 'days')))\n  const [currentMonthDates, setCurrentMonthDates] = useState(Array.from({length: moment().add(monthOffset,'months').daysInMonth()}, (x, i) => moment().add(monthOffset,'months').startOf('month').add(i, 'days')))\n  // const lastMonth = moment().add(monthOffset - 1, 'months');\n  // const nextMonth = moment().add(monthOffset + 1, 'months');\n  // const currentMonthDates = new Array(currentMonth.daysInMonth()).fill(null).map((x, i) => currentMonth.startOf('month').add(i, 'days'));\n  const weekArray = moment.weekdays()\n\n\n  useEffect(() => {\n    if (!addNewEventVisible) {\n      dispatch({\n        type: 'SELECTED_DATE',\n        data: '',\n      })\n      console.log('removi')\n    }\n  },[addNewEventVisible])\n\n  useEffect(() => {\n    console.log(events)\n  },[events])\n\n  useEffect(() => {\n    console.log(selectedDate)\n  },[selectedDate])\n  // useEffect(() => {\n  //   currentMonthDates = [];\n  // },[monthOffset])\n\n  // const getDaysByMonth = (month) => {\n  //   console.log('month', month)\n  //   const daysInMonth = moment(month).daysInMonth();\n  //   return Array.from({length: daysInMonth}, (v, k) => k + 1)\n  // };\n\n  useEffect(() => {\n    // setCurrentMonth(moment().add(monthOffset, 'months'));\n    // setNextMonth(Array.from({length: moment().add(monthOffset + 1,'months').daysInMonth()}, (x, i) => moment().add(monthOffset + 1,'months').startOf('month').add(i, 'days')));\n    // setCurrentMonthDates(Array.from({length: moment().add(monthOffset,'months').daysInMonth()}, (x, i) => moment().add(monthOffset,'months').startOf('month').add(i, 'days')));\n  },[monthOffset])\n\n  \n  \n  useEffect(() => {\n    // console.log('mudou currentMonthDates', currentMonthDates[0].day())\n    // const date = currentMonthDates[0].day();\n    // if(date > 0) {\n    //   for (var i = 0; i < date; i++) {\n    //     currentMonthDates.unshift(currentMonthDates[0].add(i - 1, 'days'))\n    //   }\n    // }\n    // let auxArray = []\n    // if(currentMonthDates.length +  auxArray.length < 35) {\n    //   console.log(currentMonthDates.length)\n    //   setCurrentMonthDates(currentMonthDates.concat(nextMonth.slice(0, 35 - currentMonthDates.length)));\n    // }\n    \n    //setCurrentMonthDates(currentMonthDates.concat(auxArray))\n    //console.log(auxArray)\n  },[])\n\n  const RenderEvents = (props) => {\n    const currentDate = props.date.format('DD/MM/YYYY');\n    return (\n      <div className=\"calendar-event-wrapper\">\n        {\n          events && events[currentDate] && events[currentDate].map((event, index) => {\n            return (\n              <div key={event.hour} className=\"calendar-event-item\" onClick={() => handleEventClick(props.date.format('DD/MM/YYYY'), index)}>\n                <span className=\"event-circle\" style={{ backgroundColor: event.color }}></span>\n                <span className=\"event-title\">\n                  {event.title && event.title}\n                  {/* Nome do evento */}\n                </span>\n                {/* <span className=\"event-hour\">{event.hour && event.hour}</span> */}\n                <span className=\"event-hour\">{event.hour && event.hour}</span>\n              </div>\n            );\n          })\n        }\n      </div>\n    );\n  }\n\n  const MonthChooserHeader = () => {\n    return (\n      <div className=\"calendar-chooser-header\">\n        <div onClick={() => setMonthOffset(monthOffset - 1)}>\n          {' < '}\n        </div>\n        {currentMonth.format(\"MMMM, YYYY\")}\n        <div onClick={() => setMonthOffset(monthOffset + 1)}>\n          {' > '}\n        </div>\n      </div>\n    );\n  }\n\n  const HeaderCalendar = () => {\n    return (\n      <div className=\"calendar-week-header\">\n        {\n          weekArray.map((weekdayItem) => {\n            return (\n              <div key={weekdayItem} className=\"calendar-week-header\" style={{ paddingLeft: 1 }}>\n                {weekdayItem}\n              </div>\n            );\n          })\n        }\n      </div>\n    );\n  }\n  // console.log(currentMonthDates)\n  const handleDateClick = (date) => {\n    console.log('chamei', date)\n    dispatch({\n      type: 'SELECTED_DATE',\n      data: { date },\n    })\n    setSelectedIndex(date)\n    setAddNewEventVisible(true)\n  }\n\n  const handleEventClick = (e, date, index) => {\n    // e.stopPropagation();\n    console.log('chamei evento')\n    dispatch({\n        type: 'SELECTED_EVENT',\n        data: events.date[index],\n      })\n\n    dispatch({\n      type: 'REMOVE_EVENT',\n      data: {\n        date,\n        index,\n      }\n    })\n  }\n\n  return (\n    <>\n      <MonthChooserHeader />\n      <HeaderCalendar />\n      {/* <Alert /> */}\n      <Modal\n        setAddNewEventVisible={setAddNewEventVisible}\n        addNewEventVisible={addNewEventVisible}\n      />\n      <div className=\"calendar-wrapper\">\n        {\n          currentMonthDates.map((date, index) => {\n            // console.log(date)\n            // console.log(date.format('L'))\n            return (\n              <div onClick={(e) => handleDateClick(date.format('DD/MM/YYYY'), index)} className=\"calendar-item-wrapper\" key={date.format('L')}>\n                <div className={`${(date.day() === 0 || date.day() === 6) ? 'weekend' : 'calendar-item'}`}>\n                  <div className=\"event-date-number\">\n                    {date.date()}\n                  </div>\n                  <RenderEvents date={date}/>\n                </div>\n                \n                {/* <>\n                </> */}\n              </div>\n            );\n          })\n        }\n      </div>\n    </>\n  );\n}\n\nexport default Calendar;\n","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/reportWebVitals.js",[],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Modal.js",["45","46","47","48","49"],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/index.js",[],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/store/index.js",["50","51"],"import { createStore } from 'redux';\n\nconst INITIAL_STATE = {\n  data: {\n    '11/11/2020': [{\n      title: 'Consulta médico',\n      hour: '13:00',\n      city: 'Sidney',\n      color: '#007bff',\n    }],\n    '12/11/2020': [{\n      title: 'Lavar carro',\n      hour: '18:00',\n      city: 'London',\n      color: '#dc3545',\n    }],\n  },\n}\n\nfunction events(state =  INITIAL_STATE, action) {\n    switch(action.type) {\n      case 'SELECTED_EVENT':\n        return {\n          ...state,\n          selectedDate: null,\n          selectedEvent: action.data,\n        }\n      case 'SELECTED_DATE':\n        return {...state, selectedDate: action.data}\n      case 'REMOVE_EVENT':\n        console.log(action.data)\n        const dateString = action.data.date;\n        const index = action.data.index;\n        state.data[dateString].splice(index, 1);\n        return state\n      // case 'REMOVE_ALL_EVENTS_FROM_DAY':\n      //   console.log(action.data)\n      //   const dateString = action.data.date;\n      //   const index = action.data.index;\n      //   state.data[dateString].splice(index, 1);\n      //   return state\n      case 'ADD_NEW_EVENT':\n        const date = Object.keys(action.data)[0];\n        const event = action.data[date];\n        let isEmptyDate = true;\n        Object.keys(state.data).map(element => {\n          if (element === date) {\n            state.data[element].push(action.data[element][0])\n            console.log(state.data)\n            state.data[element].sort(function (a, b) {\n              return a.hour.localeCompare(b.hour);\n            });\n            isEmptyDate = false;\n          }\n        });\n        if (isEmptyDate) {\n          console.log('tem nada nesse dia', action.data)\n          return {...state, data: { ...state.data, ...action.data }}\n        }\n        return state\n      default:\n        return state;\n    }\n}\n\nconst store = createStore(events);\n\nexport default store;","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/static.js",[],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Alert.js",["52","53"],{"ruleId":"54","severity":1,"message":"55","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":12},{"ruleId":"54","severity":1,"message":"58","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":13},{"ruleId":"54","severity":1,"message":"59","line":14,"column":24,"nodeType":"56","messageId":"57","endLine":14,"endColumn":39},{"ruleId":"54","severity":1,"message":"60","line":15,"column":10,"nodeType":"56","messageId":"57","endLine":15,"endColumn":23},{"ruleId":"54","severity":1,"message":"61","line":19,"column":10,"nodeType":"56","messageId":"57","endLine":19,"endColumn":19},{"ruleId":"54","severity":1,"message":"62","line":19,"column":21,"nodeType":"56","messageId":"57","endLine":19,"endColumn":33},{"ruleId":"54","severity":1,"message":"63","line":20,"column":29,"nodeType":"56","messageId":"57","endLine":20,"endColumn":49},{"ruleId":"64","severity":1,"message":"65","line":35,"column":5,"nodeType":"66","endLine":35,"endColumn":25,"suggestions":"67"},{"ruleId":"54","severity":1,"message":"68","line":1,"column":31,"nodeType":"56","messageId":"57","endLine":1,"endColumn":37},{"ruleId":"54","severity":1,"message":"69","line":8,"column":8,"nodeType":"56","messageId":"57","endLine":8,"endColumn":18},{"ruleId":"54","severity":1,"message":"70","line":9,"column":8,"nodeType":"56","messageId":"57","endLine":9,"endColumn":13},{"ruleId":"54","severity":1,"message":"71","line":21,"column":9,"nodeType":"56","messageId":"57","endLine":21,"endColumn":18},{"ruleId":"64","severity":1,"message":"72","line":64,"column":5,"nodeType":"66","endLine":64,"endColumn":31,"suggestions":"73"},{"ruleId":"54","severity":1,"message":"74","line":44,"column":15,"nodeType":"56","messageId":"57","endLine":44,"endColumn":20},{"ruleId":"75","severity":1,"message":"76","line":46,"column":45,"nodeType":"77","messageId":"78","endLine":46,"endColumn":47},{"ruleId":"54","severity":1,"message":"79","line":2,"column":27,"nodeType":"56","messageId":"57","endLine":2,"endColumn":33},{"ruleId":"64","severity":1,"message":"80","line":16,"column":8,"nodeType":"66","endLine":16,"endColumn":16,"suggestions":"81"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'setCurrentMonth' is assigned a value but never used.","'selectedIndex' is assigned a value but never used.","'nextMonth' is assigned a value but never used.","'setNextMonth' is assigned a value but never used.","'setCurrentMonthDates' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["82"],"'useRef' is defined but never used.","'InputGroup' is defined but never used.","'axios' is defined but never used.","'hourRegex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selectedDate.date'. Either include it or remove the dependency array.",["83"],"'event' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'toggleShowA'. Either include it or remove the dependency array.",["84"],{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [addNewEventVisible, dispatch]",{"range":"91","text":"92"},"Update the dependencies array to be: [props.addNewEventVisible, selectedDate.date]",{"range":"93","text":"94"},"Update the dependencies array to be: [events, toggleShowA]",{"range":"95","text":"96"},[1748,1768],"[addNewEventVisible, dispatch]",[2133,2159],"[props.addNewEventVisible, selectedDate.date]",[468,476],"[events, toggleShowA]"]