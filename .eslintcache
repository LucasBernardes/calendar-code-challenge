[{"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/App.js":"1","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Calendar/static.js":"2","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Calendar/EventDisplayer.js":"3","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Calendar/CalendarWrapper.js":"4","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Calendar/CreatEvent.js":"5","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Calendar/Calendar.js":"6","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/store/reducer.js":"7","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/index.js":"8","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Calendar/Modal.js":"9"},{"size":374,"mtime":1606723348927,"results":"10","hashOfConfig":"11"},{"size":344,"mtime":1606740113880,"results":"12","hashOfConfig":"11"},{"size":4361,"mtime":1606740431664,"results":"13","hashOfConfig":"11"},{"size":3215,"mtime":1606740275007,"results":"14","hashOfConfig":"11"},{"size":8213,"mtime":1606740393661,"results":"15","hashOfConfig":"11"},{"size":3009,"mtime":1606740415529,"results":"16","hashOfConfig":"11"},{"size":1193,"mtime":1606740436082,"results":"17","hashOfConfig":"11"},{"size":500,"mtime":1606597248331,"results":"18","hashOfConfig":"11"},{"size":1250,"mtime":1606741697764,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"id7xea",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/App.js",["39"],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Calendar/static.js",[],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Calendar/EventDisplayer.js",["40","41"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Modal, Button, ListGroup, Accordion, Alert, Badge, Spinner } from 'react-bootstrap';\nimport moment from 'moment';\nimport axios from \"axios\";\n\n\nfunction EventDisplayer(props) {\n  const { selectedEvent, hideModalEvent, addNewEventVisible } = props;\n  const [weather, setWeather] = useState([])\n  const [isLoadingWeaher, setIsLoadingWeaher] = useState(false)\n  const events = useSelector(state => state.data);\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    setWeather('')\n    setIsLoadingWeaher(true)\n    const options = {\n      method: 'GET',\n      url: 'https://community-open-weather-map.p.rapidapi.com/forecast/daily',\n      params: {\n        q: selectedEvent.city && selectedEvent.city,\n        cnt: '16',\n        units: 'metric'\n      },\n      headers: {\n        'x-rapidapi-key': '99911a1476msh22ab3d3cde144f0p107d38jsna51a006db844',\n        'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com'\n      }\n    };\n    axios.request(options).then(function (response) {\n      if (response.data && response.data.list) {\n        setWeather(response.data.list)\n      }\n      setIsLoadingWeaher(false)\n    }).catch(function (error) {\n      console.error(error);\n      setWeather('Error finding weather')\n      setIsLoadingWeaher(false)\n    });\n  }, [])\n\n  const handleDeleteEvent = () => {\n    const newDate = { ...events };\n    newDate[selectedEvent.date].splice(selectedEvent.index, 1)\n    dispatch({\n      type: 'REMOVE_EVENT',\n      data: newDate,\n    })\n    hideModalEvent()\n  }\n\n  const handleEditEvent = () => {\n    dispatch({\n      type: 'EDIT_EVENT_MODE',\n      data: selectedEvent,\n    })\n  }\n\n  const HandleWeather = () => {\n    if (isLoadingWeaher) {\n      return (\n        <Alert variant=\"primary\">\n          <Spinner animation=\"border\" variant=\"primary\" /> Loading weather from server\n        </Alert>\n      );\n    }\n    if (weather && weather.constructor === Array) {\n      const listWeather = weather.map((day) => {\n        if (day.weather) {\n          const dayWeather = day.weather.map((actualWeather) => {\n            return actualWeather.description;\n          })\n          return dayWeather;\n        }\n        return null\n      })\n\n      return (\n        <Accordion>\n          <Card>\n            <Card.Header>\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                {`Weather for Next 16 Days`}\n              </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse eventKey=\"0\">\n              <ListGroup>\n                {\n                  listWeather.map((weatherList, index) => {\n                    const day = moment().add(index, 'days').format('DD/MM/YYYY');\n                    return (\n                      <div key={index}>\n                        <ListGroup.Item >\n                          {`${day} - ${weatherList.join(', ')}`}\n                          {selectedEvent.date === day ? (\n                            <>\n                              {' '}<Badge variant=\"primary\">Your event day!</Badge>\n                            </>\n                          ) : null}\n                        </ListGroup.Item>\n                      </div>\n                    );\n                  })\n                }\n              </ListGroup>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n      )\n    }\n    return (\n      <Alert variant=\"warning\">\n        No weather found for this location\n      </Alert>\n    );\n\n\n\n\n  }\n\n  return (\n    <>\n      <Modal.Header className=\"header-color\" closeButton>\n        <Modal.Title>{selectedEvent.hour && selectedEvent.date ? moment(`${selectedEvent.date} ${selectedEvent.hour}`, 'DD/MM/YYYY HH:mm').format('DD/MM/YYYY HH:mm').toString() : ''}</Modal.Title>\n      </Modal.Header>\n      <Card>\n        <Card.Body>\n          <Card.Title>{selectedEvent.title && selectedEvent.title}</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">{selectedEvent.city && selectedEvent.city}</Card.Subtitle>\n          <HandleWeather />\n          <Button onClick={handleEditEvent} variant=\"primary mt-4\">Edit</Button>{' '}\n          <Button onClick={handleDeleteEvent} variant=\"danger mt-4\">Delete</Button>\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default EventDisplayer","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Calendar/CalendarWrapper.js",[],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Calendar/CreatEvent.js",[],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Calendar/Calendar.js",["42","43"],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/store/reducer.js",[],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/index.js",[],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Calendar/Modal.js",[],{"ruleId":"44","severity":1,"message":"45","line":1,"column":8,"nodeType":"46","messageId":"47","endLine":1,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":9,"column":42,"nodeType":"46","messageId":"47","endLine":9,"endColumn":60},{"ruleId":"49","severity":1,"message":"50","line":41,"column":6,"nodeType":"51","endLine":41,"endColumn":8,"suggestions":"52"},{"ruleId":"49","severity":1,"message":"53","line":40,"column":6,"nodeType":"51","endLine":40,"endColumn":17,"suggestions":"54"},{"ruleId":"49","severity":1,"message":"55","line":49,"column":6,"nodeType":"51","endLine":49,"endColumn":26,"suggestions":"56"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'addNewEventVisible' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedEvent.city'. Either include it or remove the dependency array.","ArrayExpression",["57"],"React Hook useEffect has missing dependencies: 'currentMonthDates' and 'nextMonth'. Either include them or remove the dependency array.",["58"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["59"],{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [selectedEvent.city]",{"range":"66","text":"67"},"Update the dependencies array to be: [currentMonthDates, lastMonth, nextMonth]",{"range":"68","text":"69"},"Update the dependencies array to be: [addNewEventVisible, dispatch]",{"range":"70","text":"71"},[1387,1389],"[selectedEvent.city]",[2352,2363],"[currentMonthDates, lastMonth, nextMonth]",[2503,2523],"[addNewEventVisible, dispatch]"]