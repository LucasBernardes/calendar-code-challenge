[{"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/App.js":"1","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/reportWebVitals.js":"2","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Modal.js":"3","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/index.js":"4","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/store/index.js":"5","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/static.js":"6","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Alert.js":"7","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/EventDisplayer.js":"8","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/CreatEvent.js":"9","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/store/reducer.js":"10","/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Calendar/Calendar.js":"11"},{"size":374,"mtime":1606723348927,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1606353198693,"results":"14","hashOfConfig":"13"},{"size":1243,"mtime":1606728650131,"results":"15","hashOfConfig":"13"},{"size":500,"mtime":1606597248331,"results":"16","hashOfConfig":"13"},{"size":129,"mtime":1606705989556,"results":"17","hashOfConfig":"13"},{"size":344,"mtime":1606704934228,"results":"18","hashOfConfig":"13"},{"size":1581,"mtime":1606665393477,"results":"19","hashOfConfig":"13"},{"size":4402,"mtime":1606715924821,"results":"20","hashOfConfig":"13"},{"size":8445,"mtime":1606729087960,"results":"21","hashOfConfig":"13"},{"size":1213,"mtime":1606728407829,"results":"22","hashOfConfig":"13"},{"size":6764,"mtime":1606737338341,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"id7xea",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/App.js",["47"],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/reportWebVitals.js",[],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Modal.js",[],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/index.js",[],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/store/index.js",[],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/static.js",[],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Alert.js",["48","49"],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/EventDisplayer.js",["50","51"],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/CreatEvent.js",[],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/store/reducer.js",[],"/Users/lucasbernardes/Desktop/calendar-code-challenge/src/Calendar/Calendar.js",["52","53","54","55"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Tooltip, OverlayTrigger, Button, Badge } from 'react-bootstrap';\nimport moment from 'moment';\nimport Modal from '../Modal';\nimport './../styles.css';\nimport { colors } from '../static';\n\nfunction Calendar() {\n  const events = useSelector(state => state.data);\n  const [addNewEventVisible, setAddNewEventVisible] = useState(false)\n  const [monthOffset, setMonthOffset] = useState(0)\n  const [currentMonth, setCurrentMonth] = useState(moment().add(0, 'months'))\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const dispatch = useDispatch();\n  const [lastMonth, setLastMonth] = useState(Array.from({ length: moment().add(monthOffset - 1, 'months').daysInMonth() }, (x, i) => moment().add(monthOffset - 1, 'months').startOf('month').add(i, 'days')))\n  const [nextMonth, setNextMonth] = useState(Array.from({ length: moment().add(monthOffset + 1, 'months').daysInMonth() }, (x, i) => moment().add(monthOffset + 1, 'months').startOf('month').add(i, 'days')))\n  const [currentMonthDates, setCurrentMonthDates] = useState(Array.from({ length: moment().add(monthOffset, 'months').daysInMonth() }, (x, i) => moment().add(monthOffset, 'months').startOf('month').add(i, 'days')))\n  const weekArray = moment.weekdays()\n\n  useEffect(() => {\n    console.log(monthOffset)\n    setCurrentMonthDates(Array.from({ length: moment().add(monthOffset, 'months').daysInMonth() }, (x, i) => moment().add(monthOffset, 'months').startOf('month').add(i, 'days')))\n    setNextMonth(Array.from({ length: moment().add(monthOffset + 1, 'months').daysInMonth() }, (x, i) => moment().add(monthOffset + 1, 'months').startOf('month').add(i, 'days')))\n    setLastMonth(Array.from({ length: moment().add(monthOffset - 1, 'months').daysInMonth() }, (x, i) => moment().add(monthOffset - 1, 'months').startOf('month').add(i, 'days')))\n    setCurrentMonth(moment().add(monthOffset, 'months'))\n    console.log(currentMonthDates)\n  }, [monthOffset])\n\n  useEffect(() => {\n    console.log(currentMonthDates)\n    let auxMonth = [...currentMonthDates];\n    const date = auxMonth[0].day();\n    if (date > 0) {\n      auxMonth = [...lastMonth.slice(-date), ...currentMonthDates]\n    }\n    if (auxMonth.length < 35) {\n      auxMonth = [...auxMonth, ...nextMonth.slice(0, 35 - auxMonth.length)]\n    } else if (auxMonth.length > 35){\n      auxMonth = [...auxMonth, ...nextMonth.slice(0, 42 - auxMonth.length)]\n    }\n    setCurrentMonthDates(auxMonth)\n  }, [lastMonth])\n\n  useEffect(() => {\n    if (!addNewEventVisible) {\n      dispatch({\n        type: 'SELECTED_DATE',\n        data: '',\n      })\n    }\n  }, [addNewEventVisible])\n\n  const RenderEvents = (date) => {\n    const currentDate = date.format('DD/MM/YYYY');\n    return (\n      <div className=\"calendar-event-wrapper\">\n        {\n          events && events[currentDate] && events[currentDate].map((event, index) => {\n            return (\n              <div key={event.hour} className=\"calendar-event-item\" onClick={(e) => handleEventClick(e, date.format('DD/MM/YYYY'), index)}>\n                <span className=\"event-circle\" style={{ backgroundColor: colors[event.radioValue].color }}></span>\n                <span className=\"event-title\">\n                  {event.title && event.title}\n\n                </span>\n                <span className=\"event-hour\">{event.hour && event.hour}</span>\n              </div>\n            );\n          })\n        }\n      </div>\n    );\n  }\n\n  const MonthChooserHeader = () => {\n    return (\n      <div variant=\"primary\" size=\"sm\" className=\"calendar-chooser-header\">\n        <h6>\n          <Badge className='month-button' variant=\"danger\" onClick={() => setMonthOffset(monthOffset - 1)}>{'<'}</Badge>{' '}\n          <Badge variant=\"light\">{currentMonth.format(\"MMMM, YYYY\")}</Badge>{' '}\n          <Badge className='month-button' variant=\"danger\" onClick={() => setMonthOffset(monthOffset + 1)}>{'>'}</Badge>\n        </h6>\n      </div>\n    );\n  }\n\n  const HeaderCalendar = () => {\n    return (\n      <div className=\"calendar-week-header\">\n        {\n          weekArray.map((weekdayItem) => {\n            return (\n              <div key={weekdayItem} className=\"calendar-week-header\" style={{ paddingLeft: 1 }}>\n                {weekdayItem}\n              </div>\n            );\n          })\n        }\n      </div>\n    );\n  }\n\n  const handleDateClick = (date) => {\n    dispatch({\n      type: 'SELECTED_DATE',\n      data: { date },\n    })\n    setSelectedIndex(date)\n    setAddNewEventVisible(true)\n  }\n\n  const handleRemoveAllClick = (e, date) => {\n    const removed = { ...events }\n    removed[date] = [];\n    e.stopPropagation();\n    dispatch({\n      type: 'REMOVE_EVENT',\n      data: { ...removed },\n    })\n  }\n\n  const handleEventClick = (e, date, index) => {\n    e.stopPropagation();\n    dispatch({\n      type: 'SELECTED_EVENT',\n      data: { ...events[date][index], index, date },\n    })\n    setAddNewEventVisible(true)\n  }\n\n  return (\n    <>\n      <MonthChooserHeader />\n      <HeaderCalendar />\n      <Modal\n        setAddNewEventVisible={setAddNewEventVisible}\n        addNewEventVisible={addNewEventVisible}\n      />\n\n      <div className={`calendar-wrapper ${currentMonthDates.length > 35 && 'exception-month-42-lines'}`}>\n      {/* <div className={`${currentMonthDates.length > 35 && 'exception-month-42-lines'}`}> */}\n        {\n          currentMonthDates.map((date, index) => {\n            const formatedDate = date.format('DD/MM/YYYY');\n            return (\n              <div onClick={() => handleDateClick(date.format('DD/MM/YYYY'), index)} className=\"calendar-item-wrapper\" key={date.format('L')}>\n                <div className={`${(date.day() === 0 || date.day() === 6) || date.format('MMM') !== currentMonth.format(\"MMM\")? 'weekend' : 'calendar-item'}`}>\n                  <div className=\"event-date-number\">\n                    {date.date()}\n                    {events[formatedDate] && events[formatedDate].length > 0 && (\n                      <OverlayTrigger\n                        key=\"top\"\n                        overlay={\n                          <Tooltip id={`tooltip-top`}>\n                            Remove all events\n                          </Tooltip>\n                        }\n                      >\n                        <Button onClick={(e) => handleRemoveAllClick(e, formatedDate)} variant=\"secondary\" style={{ float: 'right', padding: 0, width: 15, marginTop: 2, fontSize: 10 }} >x</Button>\n                      </OverlayTrigger>\n                    )}\n                  </div>\n                  {RenderEvents(date)}\n                </div>\n              </div>\n            );\n          })\n        }\n      </div>\n    </>\n  );\n}\n\nexport default Calendar;\n",{"ruleId":"56","severity":1,"message":"57","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":2,"column":27,"nodeType":"58","messageId":"59","endLine":2,"endColumn":33},{"ruleId":"61","severity":1,"message":"62","line":16,"column":8,"nodeType":"63","endLine":16,"endColumn":16,"suggestions":"64"},{"ruleId":"56","severity":1,"message":"65","line":9,"column":42,"nodeType":"58","messageId":"59","endLine":9,"endColumn":60},{"ruleId":"61","severity":1,"message":"66","line":42,"column":6,"nodeType":"63","endLine":42,"endColumn":8,"suggestions":"67"},{"ruleId":"56","severity":1,"message":"68","line":14,"column":10,"nodeType":"58","messageId":"59","endLine":14,"endColumn":23},{"ruleId":"61","severity":1,"message":"69","line":28,"column":6,"nodeType":"63","endLine":28,"endColumn":19,"suggestions":"70"},{"ruleId":"61","severity":1,"message":"71","line":43,"column":6,"nodeType":"63","endLine":43,"endColumn":17,"suggestions":"72"},{"ruleId":"61","severity":1,"message":"73","line":52,"column":6,"nodeType":"63","endLine":52,"endColumn":26,"suggestions":"74"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toggleShowA'. Either include it or remove the dependency array.","ArrayExpression",["75"],"'addNewEventVisible' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selectedEvent.city'. Either include it or remove the dependency array.",["76"],"'selectedIndex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentMonthDates'. Either include it or remove the dependency array.",["77"],"React Hook useEffect has missing dependencies: 'currentMonthDates' and 'nextMonth'. Either include them or remove the dependency array.",["78"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["79"],{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [events, toggleShowA]",{"range":"90","text":"91"},"Update the dependencies array to be: [selectedEvent.city]",{"range":"92","text":"93"},"Update the dependencies array to be: [currentMonthDates, monthOffset]",{"range":"94","text":"95"},"Update the dependencies array to be: [currentMonthDates, lastMonth, nextMonth]",{"range":"96","text":"97"},"Update the dependencies array to be: [addNewEventVisible, dispatch]",{"range":"98","text":"99"},[468,476],"[events, toggleShowA]",[1411,1413],"[selectedEvent.city]",[2022,2035],"[currentMonthDates, monthOffset]",[2533,2544],"[currentMonthDates, lastMonth, nextMonth]",[2684,2704],"[addNewEventVisible, dispatch]"]